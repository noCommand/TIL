http://bcho.tistory.com/773
git에 대한 사용법이 쉽게 풀어져있는 블로그


1) repository 생성
 git에서 init은 local에 새롭게 저장소를 만듦

GIT CLONE
  원격에 있는 서버의 저장소를 복사해서 로컬에 만드려면 사용

  git clone 사용자명@서버주소:"저장소경로"

2) 파일추가

  형태가 어떤식으로 되는가 -   Working dir(Local dir)    (add-->   Staging     (commit--> Master (local)

  파일을 echo명령을 사용하여 추가해놓은다음
  git에게 추가될 예정이라고 git commit을 사용하여 mark를 해놓는다.

  STAGING이라는 개념은 작업 디렉토리에서 작업한 내용을 반영하기전에 최종으로 확인하는 공간이라고 생각하면 됨
  두단계 과정을 거치는 two-phase commit을 사용한다.

  작업한 내용 중 commit할 내용을 add로 stage에 반영한 후에 stage에 있는내용을 commit전에 저장소 내의 코드와 비교 하면서 commit을 한다.

  * 작업영역과 stage의 차이는 diff 명령어를 통해서 가능하다. (git diff --cashed)
  작업후 바뀐 내용을 몽땅 commit하는 것이 아니라, 하나하나 따져가면서 분류하면서 각각 commit할 수 있다.

3) 저장소 반영(commit)
  add를 통하여 리스트를 작성하고 diff를 통하여 확인하면 이를 저장소에 반영해야함
  반영은 commit을 통하여 가능하고 comment를 통하여 변경내용을 작성할 수 있다.  commit -m "변경내용은 ~다 "

4) 변경 내용을 원격 저장소에 반영(push)
  앞까지 한것은 소스코드의 변경 내용을 local pc에 있는 git 저장소에 저장된것이다(서버에 저장된것이 아니다)
    ----------"GIT은 분산저장소이기 때문에!!!!!!!!!!!!!!!!!!!!!!!!!!"

  형태가 어떤식으로 되는가 -   Working dir(Local dir)    (add-->   Staging     (commit--> Master (local)
   (push--> Remote Repository(server) 그래서 이런 마지막 단계가 필요하다.
   명령어는 git push "브랜치명"
   ex) git push origin master 처음에 저장소를 만들때 git clone을 통해서 원격 저장소로부터 코드를 읽어와서 로컬저장소를 만들었을 때
    만약 원격 저장소로부터 clone을 해서 만든 경우가 아닐때,      원격 저장소로 code를 밀어넣고 싶을 떄 원격 저장소를 정의해두어야한다
                                                              git remote add "원격 저장소명" "원격 저장소 주소"

                                                              예) git remote add zipkin https://github.com/twitter/zipkin.git
                                                              zipkin이라는 이름으로 https://github.com/twitter/zipkin.git URL에 있는 원격 저장소를 등록하였다.
                                                              여기에 push를 하려면, git push zipkin master (zipkin 원격 저장소 master branch에 push)

                                                              + 원격 저장소는 git remote -v 를 통하여 조회해볼 수 있다.

  5) 브랜치 관리
   브랜치 생성 - git branch "브랜치명"
   작접중인 브랜치 이동 git checkout "브랜치명"

  6)merge
    다른 브랜치의 내용을 현재 작업중인 브랜치로 합쳐오는 작업이다.

  7) 원격 저장소의 변경 내용을 가지고 오기 (pull fetch)
    원격 저장소에서 다른 사람들이 작업했던 내용을 내 로컬저장소로 가지고 오려면 이 두가지 방법이 있다.

    fetch의 경우에는 원격 저장소의 브랜치를 가지고와서    로컬 브랜치에 새로운 브런치로 생성한다  - 현재 내가 작업하고있는 브랜치에 아무 영향도 끼치지 않는다.
    그리고 가져온 원격 저장소의 내용은 반영되지 않는다.
    내 작업 현황 master 브랜치에서 v1 -> v2 -> v3 -> v4... 작업중일때  이때 fetch를 하면 원격 저장소의 내용은 따로 새로운 "??"브랜치로 인식
    그래서 따로 merge를 해줘야 한다

    pull은 fetch+merge이다
    말글대로 clone해서 작업하고있던 브랜치에 원격 저장소에 있는 변경사항을 merge해서 같은 브랜치에 업데이트해준다.

  8) 태깅
    git tag -a "태그명" -m "태그설명"

  9) rebase
    master에서 v1 -> v2 -> v3 -> v5         -> 여기서 v5  내가작업한 v4 합치면  v6이 생성 이떄 v4는 그대로 남아있는데
           (branch생성해서 작업-> v4
                                              이때 rebase는 v4를 없애고 기존 master의 history 처럼 남길수 있음 
